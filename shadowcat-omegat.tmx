<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header
    creationtool="OmegaT"
    creationtoolversion="1.8.1_2"
    segtype="sentence"
    o-tmf="OmegaT TMX"
    adminlang="EN-US"
    srclang="EN-US"
    datatype="plaintext"
  >
  </header>
  <body>
    <tu>
      <tuv lang="EN-US">
        <seg>Linux Magazine Column 94 (Jun 2007)</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Columna 94 del Linux Magazine (juny de 2007)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[suggested title: ``The Moose is Flying (part 1)'']</seg>
      </tuv>
      <tuv lang="CA">
        <seg>[títol suggerit: «El Moose està volant (1a part)»]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perl's object system is very ``flexible'', meaning, you get to build it from the ground up.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>El sistema d'objectes de Perl és molt «flexible», és a dir, es construeix de baix cap a dalt.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can build traditional hash-based objects, or more exotic array-based or inside-out objects.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Podeu construir objectes tradicionals basats en taules de dispersió, o objectes més exòtics basats en matrius o objectes capgirats.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And then you have to create the accessors, define access policies, and perform a lot of repetitive code.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Aleshores heu de crear els mètodes accessors, definir les polítiques d'accés i generar un munt de codi repetit.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Luckily, Perl is introspective enough that you can get Perl to do most of the hard boring work.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Afortunadament, Perl és prou introspectiu com perquè li encomaneu la majoria del treball dur i avorrit.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This has resulted in a number of ``class frameworks'' finding their way onto the CPAN.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Això ha provocat que un bon nombre «d'entorns de treball per a classes» hagin estat publicats al CPAN.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Moose&lt;/c0&gt; framework appeared about a year ago, and I initially dismissed it as ``yet another class framework'', much in the same way as I feel about yet another templating system or object-relational mapper.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>L'enton de treball &lt;c0&gt;Moose&lt;/c0&gt; va sorgir fa un any i inicialment jo el vaig descartar com «un altre entorn de treball per a classes», de la mateixa manera que un altre sistema de plantilles o un altre mapeig d'objectes relacional em fan sentir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, I recently took a look at what &lt;c0&gt;Moose&lt;/c0&gt; had become, and was pleasantly surprised.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Tanmateix, vaig fer un cop d'ull recentment al que s'havia convertit &lt;c0&gt;Moose&lt;/c0&gt; i em vaig endur una sorpresa agradable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As I started playing with it, I exclaimed frequently that this framework would have saved me quite a bit of time on some past projects, such as the text I wrote for our &lt;e1&gt;Intermediate Perl&lt;/e1&gt; course and book, parts of which have been included as the &lt;e2&gt;perlboot&lt;/e2&gt; manpage in the distribution.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Així que em vaig posar a jugar-hi, sovint vaig exclamar que aquest entorn de treball m'hauria estalviat un bona pila de temps en alguns projectes passats, com ara el text que vaig escriure per al nostre curs i llibre &lt;e1&gt;Intermediate Perl&lt;/e1&gt;, algunes parts del qual s'han inclòs com la pàgina de manual &lt;e2&gt;perlboot&lt;/e2&gt; a la distribució.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's recreate the ``animal'' classes from that text, using &lt;c3&gt;Moose&lt;/c3&gt;, to see how this emerging framework simplifies things.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Posem-nos a refer les classes «d'animals» d'aquell text utilitzant &lt;c3&gt;Moose&lt;/c3&gt; per veure com aquest entorn de treball emergent simplifica les coses.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, we'll create a horse class in &lt;c0&gt;Horse.pm&lt;/c0&gt; that has a name and a color:</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Primer crearem la classe cavall a &lt;c0&gt;Horse.pm&lt;/c0&gt; que té un nom i un color:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bringing in &lt;c0&gt;Moose&lt;/c0&gt; defines &lt;c1&gt;has&lt;/c1&gt;, which takes the name of an attribute along with its properties.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Incorporant &lt;c0&gt;Moose&lt;/c0&gt; es defineix &lt;c1&gt;has&lt;/c1&gt;, al qual se li passa el nom d'un atribut juntament amb les seves propietats.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, we're saying that the two attributes are ``read/write''.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>En aquest cas, diem que els dos atributs són de «lectura/escriptura».</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can now use this class:</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Ara podem utilitzar aquesta classe:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that I didn't have to define a &lt;c0&gt;new&lt;/c0&gt; method: Moose does that for me.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Fixeu-vos que no m'ha calgut definir un mètode &lt;c0&gt;new&lt;/c0&gt;: Moose ho fa per mi.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now in the original text, &lt;c0&gt;Horse&lt;/c0&gt; inherited from &lt;c1&gt;Animal&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>En el text original &lt;c0&gt;Horse&lt;/c0&gt; heretava d'&lt;c1&gt;Animal&lt;/c1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can do that rather simply.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Podem fer això molt fàcilment.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;c2&gt;Animal.pm&lt;/c2&gt;, we place:</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Posem a &lt;c2&gt;Animal.pm&lt;/c2&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And then update our &lt;c0&gt;Horse.pm&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="CA">
        <seg>I aleshores actualitzem el nostre &lt;c0&gt;Horse.pm&lt;/c0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that &lt;c0&gt;extends&lt;/c0&gt; here replaces the traditional &lt;c1&gt;use base&lt;/c1&gt; and completely sets &lt;c2&gt;@ISA&lt;/c2&gt;, rather than adding to it.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Fixeu-vos que aquí &lt;c0&gt;extends&lt;/c0&gt; substitueix el tradicional &lt;c1&gt;use base&lt;/c1&gt; i fixa completament &lt;c2&gt;@ISA&lt;/c2&gt;, enlloc d'afegir-hi un element.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(It's possible that you might want to put this inside a BEGIN block, although I've not seen any examples requiring it yet.)</seg>
      </tuv>
      <tuv lang="CA">
        <seg>(És possible que vulgueu posar això dins d'un bloc BEGIN, tot i que encara no he vist cap exemple que ho necessiti).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At this point, &lt;c0&gt;Horse&lt;/c0&gt; and &lt;c1&gt;Animal&lt;/c1&gt; are identical.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>En aquest punt, &lt;c0&gt;Horse&lt;/c0&gt; i &lt;c1&gt;Animal&lt;/c1&gt; són idèntics.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They can both be instantiated, and have the two given attributes.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Els dos es poden instanciar i se'ls pot assignar atributs.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the original example, what distinguished a horse was the sound it made, which we can add here:</seg>
      </tuv>
      <tuv lang="CA">
        <seg>En l'exemple original, el que distingia un cavall era el so que feia, cosa que podem afegir aquí:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>and then reference that in the common &lt;c0&gt;speak&lt;/c0&gt; method in &lt;c1&gt;Animal&lt;/c1&gt;:</seg>
      </tuv>
      <tuv lang="CA">
        <seg>i aleshores fer-hi referència al mètode comú &lt;c0&gt;speak&lt;/c0&gt; d'&lt;c1&gt;Animal&lt;/c1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note the use of &lt;c0&gt;confess&lt;/c0&gt;, another freebie from Moose.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Fixeu-vos en l'ús de &lt;c0&gt;confess&lt;/c0&gt;, un altre regal de Moose.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the derived class hasn't defined a sound, I want to complain.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Si la classe derivada no ha definit un so, vull queixar-me.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But since &lt;c1&gt;Horse&lt;/c1&gt; defines &lt;c2&gt;sound&lt;/c2&gt;, I'll never see that for a horse.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Però com que &lt;c1&gt;Horse&lt;/c1&gt; defineix &lt;c2&gt;sound&lt;/c2&gt;, no veure mai això per un cavall.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With this code, I can create my classic talking horse:</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Amb aquest codi puc crear el meu clàssic cavall parlador:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So far, I'm still coding things that would be simple without Moose, so let's start diverging a bit to see the full power.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Fins ara només estic programant coses que serien senzilles sense Moose, així que comencem a fer alguns canvis per veure'n tot el poder.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, an &lt;c0&gt;Animal&lt;/c0&gt; is really an abstract class, being used only to provide common attributes and methods to a concrete class (in this case, the horse class).</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Primer, un &lt;c0&gt;Animal&lt;/c0&gt; és en realitat una classe abstracta, utilitzada només per proveïr atributs i mètodes comuns per a una classe concreta (en aquest cas, la classe cavall).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Moose-terminology, this can best be described as a &lt;e1&gt;role&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>En la terminologia de Moose això es descriu millor com un &lt;e1&gt;rol&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A role is like a &lt;e2&gt;mix-in&lt;/e2&gt;, providing a collection of attributes and methods that use those attributes.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Un rol és com un &lt;e2&gt;mix-in&lt;/e2&gt;, que proveeix una col·lecció d'atributs i mètodes que utilitzen aquells atributs.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A role never has any instances, because it's not a complete class.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Un rol mai té cap instància perquè no és una classe completa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we make &lt;c0&gt;Animal&lt;/c0&gt; a role, we'll also get some additional support:</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Quan fem que &lt;c0&gt;Animal&lt;/c0&gt; sigui un rol també obtenim suport addicional:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that we've replaced the confess-including stub with &lt;c0&gt;requires&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Fixeu-vos que hem substituït l'stub que incloïa el confess per un &lt;c0&gt;requires&lt;/c0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This informs Moose that this role must now be used with a class that provides the &lt;c1&gt;sound&lt;/c1&gt; method, which will be checked at compile-time.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Això informa a Moose que les classes que usin aquest rol han de proveir el mètode &lt;c1&gt;sound&lt;/c1&gt;, que serà verificat en temps de compilació.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To pull in a role, we use &lt;c2&gt;with&lt;/c2&gt; rather than &lt;c3&gt;extends&lt;/c3&gt;:</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Per atorgar un rol utilitzem &lt;c2&gt;with&lt;/c2&gt; enlloc d'&lt;c3&gt;extends&lt;/c3&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Had we failed to include &lt;c0&gt;sound&lt;/c0&gt;, we'd get notification very early on.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Si ens haguéssim oblidat d'incloure &lt;c0&gt;sound&lt;/c0&gt; hauríem rebut un avís de bon començament.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Cool.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Genial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At this point, &lt;c1&gt;Horse&lt;/c1&gt; otherwise still works as before.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>En aquest punt, &lt;c1&gt;Horse&lt;/c1&gt; segueix funcionant com abans.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What about those &lt;c0&gt;with&lt;/c0&gt; and &lt;c1&gt;requires&lt;/c1&gt; keywords?</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Què passa amb les paraules clau &lt;c0&gt;with&lt;/c0&gt; i &lt;c1&gt;requires&lt;/c1&gt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because they're defined by the &lt;c2&gt;Moose&lt;/c2&gt; and &lt;c3&gt;Moose::Role&lt;/c3&gt; imports, they remain as part of the package.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Com que estan definits per les importacions de &lt;c2&gt;Moose&lt;/c2&gt; i &lt;c3&gt;Moose::Role&lt;/c3&gt;, romandran com a part del paquet.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the purists in us who don't like that kind of pollution, we can throw them away when we're done, using the correponding &lt;c4&gt;no&lt;/c4&gt; keyword (similiar to &lt;c5&gt;use strict&lt;/c5&gt; and &lt;c6&gt;no strict&lt;/c6&gt;).</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Per als puristes com nosaltres als que no ens agrada aquest tipus de pol·lució, podem eliminar-los quan hàgim acabat utilitzant la paraula clau &lt;c4&gt;no&lt;/c4&gt; (de forma similar a &lt;c5&gt;use strict&lt;/c5&gt; i &lt;c6&gt;no strict&lt;/c6&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, we'd clean up &lt;c7&gt;Horse.pm&lt;/c7&gt; with:</seg>
      </tuv>
      <tuv lang="CA">
        <seg>Per exemple, podem netejar &lt;c7&gt;Horse.pm&lt;/c7&gt; amb:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And similarly, &lt;c0&gt;Animal.pm&lt;/c0&gt; requires &lt;c1&gt;no Moose::Role&lt;/c1&gt; at the end.</seg>
      </tuv>
      <tuv lang="CA">
        <seg>I de forma similar, &lt;c0&gt;Animal.pm&lt;/c0&gt; necessita &lt;c1&gt;no Moose::Role&lt;/c1&gt; al final.</seg>
      </tuv>
    </tu>
  </body>
</tmx>
